name: CI/CD Pipeline for Kernal Kings

on:
  push:
    branches:
      - main  # Trigger the workflow on code push to the main branch
  pull_request:
    branches:
      - main  # Trigger workflow on pull request to main
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  # Continuous Integration job
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Adjust the Node.js version as required

      - name: Install dependencies
        run: npm install  # Install project dependencies

      - name: Run tests
        run: npm test  # Run tests defined in package.json (ensure they are set up correctly)

  # Continuous Deployment job
  cd:
    runs-on: ubuntu-latest
    needs: ci  # Ensure that the CI job has completed successfully

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2  # Set up Docker for building the container

      - name: Build Docker image
        run: docker build -t kernal-kings-app .  # Build your Docker image

      - name: Log in to DockerHub (optional)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Set up Docker credentials in GitHub Secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # Store Docker credentials securely in GitHub Secrets

      - name: Push Docker image to DockerHub (optional)
        run: docker push kernal-kings-app  # Push the image to DockerHub

      - name: Deploy to Heroku (example deployment)
        run: |
          heroku container:login
          heroku container:push web --app kernal-kings  # Replace with your Heroku app name
          heroku container:release web --app kernal-kings  # Release the container on Heroku

